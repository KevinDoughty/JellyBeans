{\rtf1\ansi\ansicpg1252\cocoartf1187
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\vieww9600\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs24 \cf0 In 10.5 Leopard, animations would stall and become choppy if (I suspect) a long transaction spanned calls to drawRect. Now it seems that the CARenderer will draw using current transaction values even if it has not been committed. This produces terrible results when using this additive animation usage pattern, which sets the new model value of a layer, then adds an animation to put the layer back where it was, and animates to the new model value. This produces results where a layer can appear to jump to the new model value, then jump back after the animation is added. The problem is not caused by the containing NSSplitView. This can be shown by selecting it in IB and choosing Unembed from the Editor menu. I hope this is a bug that can be fixed, not a feature, and a workaround would be greatly appreciated.}